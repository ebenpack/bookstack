# Generated by Django 2.0.3 on 2018-04-03 23:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('pages', models.IntegerField()),
                ('isbn', models.CharField(max_length=15, unique=True)),
                ('img', models.URLField(blank=True, max_length=500)),
                ('authors', models.ManyToManyField(to='bookstack.Author')),
            ],
        ),
        migrations.CreateModel(
            name='BookStack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('read', models.BooleanField(default=False)),
                ('position', models.IntegerField(db_index=True, default=0)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bookstack.Book')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='BookStackCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bookstack', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bookstack.BookStack')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=30, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('private', models.BooleanField(default=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('books', models.ManyToManyField(through='bookstack.BookStack', to='bookstack.Book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='bookstackcategory',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bookstack.Category'),
        ),
        migrations.AddField(
            model_name='bookstack',
            name='categories',
            field=models.ManyToManyField(blank=True, through='bookstack.BookStackCategory', to='bookstack.Category'),
        ),
        migrations.AddField(
            model_name='bookstack',
            name='stack',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='bookstack.Stack'),
        ),
        migrations.AddField(
            model_name='book',
            name='publishers',
            field=models.ManyToManyField(to='bookstack.Publisher'),
        ),
    ]
